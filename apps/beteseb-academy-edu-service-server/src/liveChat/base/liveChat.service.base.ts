/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, LiveChat as PrismaLiveChat } from "@prisma/client";

export class LiveChatServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LiveChatCountArgs, "select">): Promise<number> {
    return this.prisma.liveChat.count(args);
  }

  async liveChats<T extends Prisma.LiveChatFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.LiveChatFindManyArgs>
  ): Promise<PrismaLiveChat[]> {
    return this.prisma.liveChat.findMany<Prisma.LiveChatFindManyArgs>(args);
  }
  async liveChat<T extends Prisma.LiveChatFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.LiveChatFindUniqueArgs>
  ): Promise<PrismaLiveChat | null> {
    return this.prisma.liveChat.findUnique(args);
  }
  async createLiveChat<T extends Prisma.LiveChatCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LiveChatCreateArgs>
  ): Promise<PrismaLiveChat> {
    return this.prisma.liveChat.create<T>(args);
  }
  async updateLiveChat<T extends Prisma.LiveChatUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LiveChatUpdateArgs>
  ): Promise<PrismaLiveChat> {
    return this.prisma.liveChat.update<T>(args);
  }
  async deleteLiveChat<T extends Prisma.LiveChatDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.LiveChatDeleteArgs>
  ): Promise<PrismaLiveChat> {
    return this.prisma.liveChat.delete(args);
  }
}
